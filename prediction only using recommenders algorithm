import json
import operator
import os
main_dict={}
main_dict=json.load(open(r".\main_dict_recomenders.txt","r"))
#del main_dict[""]
a=open(r".\filelist.txt","r")
filelist=a.read().split("\n");
#print filelist
predict1={}
predict2={}
predict3={}
predict4={}
textlist=[]

while 1:
    textin=raw_input("enter function name:").strip()
    clear = lambda: os.system('cls')
    clear()
    
    textlist.append(textin)
    for i in textlist:
        print i, 

    if len(textlist)>4:
        del textlist[0]
    #predict 1
    
    for i in filelist:
        if i in main_dict.keys():
            if type(main_dict[i])==dict:
                if textlist[len(textlist)-1] in main_dict[i].keys():
                    for j in main_dict[i]:
                        if j not in predict1.keys() :
                            predict1.update({j:1})
                        else:
                            predict1[j] += 1

                if len(textlist)>1:
                    if textlist[len(textlist)-2] in main_dict[i].keys() and textlist[len(textlist)-1] in main_dict[i].keys():
                        for j in main_dict[i]:
                            if j not in predict2.keys() :
                                predict2.update({j:1})
                            else:
                                predict2[j] += 1

                if len(textlist)>2:
                    if textlist[len(textlist)-3] in main_dict[i].keys() and textlist[len(textlist)-2] in main_dict[i].keys() and textlist[len(textlist)-1] in main_dict[i].keys():
                        for j in main_dict[i]:
                            if j not in predict3.keys() :
                                predict3.update({j:1})
                            else:
                                predict3[j] += 1

                if len(textlist)>3:
                    if textlist[len(textlist)-4] in main_dict[i].keys() and textlist[len(textlist)-3] in main_dict[i].keys() and textlist[len(textlist)-2] in main_dict[i].keys() and textlist[len(textlist)-1] in main_dict[i].keys():
                        for j in main_dict[i]:
                            if j not in predict4.keys() :
                                predict4.update({j:1})
                            else:
                                predict4[j] += 1
    
    for i in predict2.keys():
        for j in predict1.keys():
            if i == j:                #checking for repeated keys                   
                del predict1[i]    #removing repeated keys  
                break
            
    for i in predict3.keys():
        for j in predict2.keys():
            if i == j:                #checking for repeated keys
                del predict2[i]    #removing repeated keys  
            
    for i in predict4.keys():
        for j in predict3.keys():
            if i == j:                #checking for repeated keys  
                del predict3[i]


    print "\n\n\npredict 4\n\n\n"
    sorted_predict4 = sorted(predict4.items(), key=operator.itemgetter(1))
    sorted_predict4.reverse()
    for i in xrange(len(sorted_predict4)):
        if len(sorted_predict4[i][0])>2:
            print sorted_predict4[i][0],sorted_predict4[i][1]
    
    print "\n\n\npredict 3\n\n\n"
    sorted_predict3 = sorted(predict3.items(), key=operator.itemgetter(1))
    sorted_predict3.reverse()
    for i in xrange(len(sorted_predict3)):
        if len(sorted_predict3[i][0])>2:
            print sorted_predict3[i][0],sorted_predict3[i][1]

    print "\n\n\npredict 2\n\n\n"
    sorted_predict2 = sorted(predict2.items(), key=operator.itemgetter(1))
    sorted_predict2.reverse()
    for i in xrange(len(sorted_predict2)):
        if len(sorted_predict2[i][0])>2:
            print sorted_predict2[i][0],sorted_predict2[i][1]

    print "\n\n\npredict 1\n\n\n"
    sorted_predict1 = sorted(predict1.items(), key=operator.itemgetter(1))
    sorted_predict1.reverse()
    for i in xrange(len(sorted_predict1)):
        if len(sorted_predict1[i][0])>2:
            print sorted_predict1[i][0],sorted_predict1[i][1]           



    
    predict1.clear()
    predict2.clear()
    predict3.clear()
    predict4.clear()
